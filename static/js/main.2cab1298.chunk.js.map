{"version":3,"sources":["reducer.js","actions.js","components/counter.js","components/app.js","index.js"],"names":["reducer","state","action","type","payload","inc","rnd","dec","connect","counter","dispatch","bindActionCreators","actions","randomValue","Math","floor","random","className","onClick","App","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"0SAceA,EAdE,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAEvC,OAAQA,EAAOC,MACb,IAAK,MACH,OAAOF,EAAQ,EAEjB,IAAK,MACH,OAAOA,EAAQ,EACjB,IAAK,MACH,OAAOA,EAAQC,EAAOE,QACxB,QACE,OAAOH,ICXAI,EAAO,iBAAO,CAACF,KAAM,QACrBG,EAAM,SAACF,GAAD,MAAc,CAC/BD,KAAM,MACNC,YAEWG,EAAM,iBAAO,CACxBJ,KAAM,QCkCOK,eAnBS,SAACP,GACpB,MAAO,CACHQ,QAASR,MAGS,SAACS,GAAc,IAAD,EAEfC,YAAmBC,EAASF,GAA9CL,EAFiC,EAEjCA,IAAKE,EAF4B,EAE5BA,IAAKD,EAFuB,EAEvBA,IACb,MAAO,CACHD,MACAE,MACAD,IAAK,WACF,IAAMO,EAAcC,KAAKC,MAAoB,GAAdD,KAAKE,UACtCV,EAAIO,OAMCL,EAhCC,SAAC,GAAgC,IAA7BC,EAA4B,EAA5BA,QAASJ,EAAmB,EAAnBA,IAAKE,EAAc,EAAdA,IAAKD,EAAS,EAATA,IACvC,OACK,yBAAKW,UAAU,aACd,4BAAKR,GACL,4BACAS,QAASb,EAAKY,UAAU,0BADxB,OAEI,4BACAC,QAASX,EAAKU,UAAU,0BADxB,OAEC,4BACAC,QAASZ,EAAMW,UAAU,0BADzB,WCXIE,EAHH,WACV,OAAQ,kBAAC,EAAD,OCKJC,EAAQC,YAAYrB,GAGpBsB,IAASC,OACT,kBAAC,IAAD,CAAUH,MAAOA,GACf,kBAAC,EAAD,OAEPI,SAASC,eAAe,U","file":"static/js/main.2cab1298.chunk.js","sourcesContent":[" const reducer = (state = 15, action) => {\n\n  switch (action.type) {\n    case 'INC':\n      return state + 1;\n\n    case 'DEC':\n      return state - 1;\n    case 'RND':\n      return state + action.payload;\n    default:\n      return state;\n  }\n};\nexport default reducer;","export const inc  = () => ({type: 'INC'});\nexport const rnd = (payload) => ({\n  type: 'RND',\n  payload\n});\nexport const dec = () => ({\n  type: 'DEC'\n});","import React  from \"react\";\nimport { bindActionCreators} from 'redux';\nimport { connect } from 'react-redux';\n//import {inc, dec, rnd} from '../actions';\n\nimport * as actions from '../actions';\n\n\nconst Counter = ( { counter, inc, dec, rnd}) => {\nreturn (\n     <div className=\"jumbotron\">\n      <h2>{counter}</h2>\n      <button \n      onClick={inc} className=\"btn btn-primary btn-lg\">INC</button>\n          <button \n          onClick={dec} className=\"btn btn-primary btn-lg\">DEC</button>\n           <button  \n           onClick={rnd}  className=\"btn btn-primary btn-lg\">RND</button>\n    </div>\n)\n}\nconst mapStateToProps = (state) => {\n     return {\n         counter: state\n     }\n}\nconst mapDispatchToProps = (dispatch) => {\n\nconst { inc, dec, rnd } = bindActionCreators(actions, dispatch);\n     return {\n         inc,\n         dec,\n         rnd: () => {\n            const randomValue = Math.floor(Math.random()*10);\n          rnd(randomValue);\n         }\n     }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);","import React from \"react\";\nimport Counter from './counter';\nconst App = () => {\n  return  <Counter />\n}\nexport default App;","import { createStore } from 'redux';\nimport React from \"react\";\nimport {Provider} from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport reducer from './reducer';\nimport App from './components/app';\n\n\nconst store = createStore(reducer);\n\n\n      ReactDOM.render(\n      <Provider store={store} >\n        <App />\n      </Provider>,\n document.getElementById('root'));\n\n"],"sourceRoot":""}